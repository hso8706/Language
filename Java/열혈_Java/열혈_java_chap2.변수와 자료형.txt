-자료형
>기본 자료형 (Primitive Data Type)
Type	값	Byte
Boolean	참과 거짓	1 바이트
char	문자 	2 바이트
byte	정수	1 바이트
short	정수	2 바이트
int	정수	4 바이트
long	정수	8 바이트
float	실수	4 바이트
double	실수	8 바이트

-변수 이름 제한 사항
>숫자로 시작할 수 없음
>&과 _ 를 제외한 특수문자 사용 불가
>키워드(문법에 사용되는 용어)를 이름으로 사용 불가

-MSB(Most Significant Bit)
: 주어진 데이터의 가장 첫번째 bit를 가리킴
: 양수와 음수를 구분함
: 0 = 양수, 1 = 음수
: MSB=0 일 때와 MSB=1일 때 나머지 비트를 해석하는 법이 다르니 주의할 것.
>음의 정수 표현 방식
: 양의 정수의 이진수 표현에 2의 보수를 취하여 표현한다.
: 보수 변환 방법
1. 각 자리를 보수 변환시킨다. (1의 보수형)
2. 마지막 자리에 1을 더한다. (2의 보수형)

-정수형 변수 선택
: 자바는 연산 시, 변수를 int형으로 변환하여 연산한다. 따라서 연산된 값이 들어가는 변수는 int여야 한다.
: 그냥 연산이 사용되는 경우에는 int형 변수에 저장하자.
: 하지만 long의 경우는 연산 시에도 int 자료형으로 변환되어 연산하지 않는다. 변환 시(8->4) 데이터 손실이 일어날 수 있고, 이런 경우 자동으로 캐스팅이 되지 않기 때문이다.
: short, byte는 연산에는 불필요하지만 필요할 때 사용하면 메모리 절약에 유용하다. 특히 게임, 그래픽 등과 같은 경우

-실수형 변수 선택
: 정수형과 다르게 값의 표현 범위가 실수형 변수들을 선택하는 기준에 속하지 않음.
: 정밀도를 가지고 판단한다. (float: 6자리 정밀도, double: 15자리 정밀도)
: 실수의 계산은 항상 오차가 존재한다. 예를 들어, double형 변수와 double형 변수의 연산 후 소수점 이하 15자리 이상의 값이 나오면 오차가 발생함.

-문자형 변수
: char을 사용하며 문자를 표현할 때 사용.
: Unicode에 character set이 있기 때문에 가능.
: Unicode는 OS에 영향을 받는다
: 문자는 작은따옴표에 감싸서 표현해야하고, 10진법 숫자의 유니코드 혹은 16진법(0x) 숫자의 유니코드로도 표현 가능하다.

-논리 자료형: Boolean
>종류
true, false (이 자체가 값임)
>예시
: 대소 비교의 값 따위를 println하면 boolean값이 나온다.
>C언어때처럼 1을 true, 0을 false로 가정하는 일이 필요가 없음. 걍 boolean을 쓰면됨.
 