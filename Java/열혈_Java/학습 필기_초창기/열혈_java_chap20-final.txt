* Wrapper 클래스
: 기본 자료형 값을 박싱, 언박싱을 통해 인스턴스 혹은 기본 자료형 값으로 바꾸는 기능을 가진 클래스
: 오토 박싱, 오토 언박싱 기능이 존재함.
-대표 메소드
>typeVlaue( );
: type으로는 기본 자료형
: 언박싱 메소드
>valueOf(data);
: data의 참조 형에 맞춰 인스턴스를 생성해주는 메소드
: new 선언을 대신 해주는 메소드
>max, min, sum 메소드
: 인자들의 대소 비교, 합을 구현하는 메소드
>toBinaryString, toOctalString, toHexString 메소드
: 인자로 전달된 숫자를 해당하는 진수로 변환한 값을 String형태로 반환하는 메소드

* BigInterg 클래스, BigDecimal 클래스
: long보다 큰 정수(BigInteger)를 표현하거나, 실수 표현의 오차를 없애기 위한 클래스(BigDecimal)
: 인자로 큰따옴표로 감싼(string형태의) 숫자를 보내어 기본 자료형에 들어가지 않도록 숨기는 원리
: add, substract, multiply, divide, intValueExact등 다양한 메소드 존재
: 기본 자료형의 계산도 나름 충분한 범위의 값과 오차를 보이고, 계산이 훨씬 빠르므로 억지로 이런 클래스를 쓰진 말 것.

* Math 클래스
: 수학 연산에 대한 메소드와 변수들이 있는 클래스
: 인스턴스를 생성하여 이용하는 클래스가 아닌, 선언된 static 메소드와 변수를 이용함.
: 수학 계산 필요하네? > 바로 Math 문서 ㄱ

* Random 클래스
: 난수를 만드는 알고리즘이 있는 클래스
: 생성자에 System.currentTimeMillis( )의 생성자를 가져오는 부분이 있기 때문에, 인자를 따로 주지 않으면 알아서 난수를 생성함.
: 인자를 줄 경우, 항상 일정한 패턴의 난수가 생성됨.
>int nextInt( ) 메소드
: 생성된 난수를 받아오는 메소드.
: int 외에도 다른 기본 자료형들이 오버로딩 되어있음.
: 해당 메소드에 주는 인자로 난수의 범위를 설정할 수 있음. 예를 들면, 0~bound미만의 범위

* StringTokenizer 클래스
: 문자열은 토큰을 구분하는 구분자, 구분자를 기준으로 나누어진 문자열의 덩어리인 토큰으로 나뉜다.
: 해당 클래스의 인스턴스를 생성하며 2가지 인자를 주는데, 첫번째 인자로는 문자열, 두번째 인자로는 토큰을 구분할 구분자를 보내면 됨.
: 구분자는 큰따옴표로 감싼 문자열 형태로 원하는 문자를 쓰면됨.
: 구분자의 값은 버려지는 값
>hasMoreTokens( ) 메소드
: 반환할 토큰이 있는지 파악하여 boolean 값으로 반환하는 메소드
: 보통 무한 반복문(while 등)의 종료점으로 만듬
>nextToken( ) 메솓
: 토큰을 반환받음.

* Arrays 클래스
: 인스턴스 생성으로 사용할 목적이 아닌 Arrays 클래스 내에 선언된 static 메소드와 변수들을 활용하기 위한 클래스
>copyOf, copyOfRange 메소드
: 배열을 복사하고 배열로 반환하는 메소드
>arraycopy
: 배열을 복사하여 미리 생성되어있는 배열에 집어 넣는 메소드
>equals 메소드
: 배열의 내용을 하나하나 비교하여 boolean 값으로 반환
: 인스턴스 배열을 비교할 땐, 각각의 인덱스끼리 Object.equals를 이용하여 비교함. (참조 값 비교)
: 따라서, 인스턴스 배열의 내용을 비교하기 위해서는 equals 메소드를 오버라이딩하여 추가 기준을 정해주어야 함. 연습할 것.
>sort 메소드
: 인자로 전달된 배열을 오름차순으로 정리해주는 메소드
: 인스턴스 배열을 정렬할 땐 compareTo 메소드를 기준으로 함.
: compareTo 메소드는 Compareble 인터페이스의 추상 메소드이므로 해당 클래스에서 구현해주어야함. (implements Compareble)
: 배열의 비교 결과가 양수, 음수, 0이 되게 구현하고, 무엇을 기준으로 비교할 지 내용으로 표현해줘야함. 이 부분이 연습할 부분
: 두 개를 비교해서 양수, 음수, 0으로 반환하는 if 문은 return A - B; 라는 간결한 문장으로 대체 가능.
>binarySearch 메소드
: 첫 번째 인자로 탐색할 배열을 주고, 두번째 인자로는 찾을 값을 준다.
: 값이 있는지 없는지 파악하고, 있다면 어느 인덱스에 있는지를 반환함
: 사용 조건으로는 배열이 오름차순으로 되어 있어야함. sort 실시