*자바의 기본 클래스

-Math 클래스
>정의
: 수학 연산이 사용될 때 사용하는 클래스
: 수학 연산이 들어가는 프로그램을 만들땐 꼭 참고할 것.
>사용
: 인스턴스 생성으로 사용하는게 주 목적은 아님.
: 다양한 연산 기능이 메소드로 정리되어 있기 때문에 바로 메소드를 가져다 쓰면 됨.
// 주의
// : 보통 각도의 기준이 degree가 아닌 radian이 기준임.

-난수의 생성, Random 클래스
>개요
: 사실 컴퓨터는 난수를 못만듬ㅎ 때문의 가짜 난수(Pseudo-code,수도 코드)라고도 함.
: 때문에 난수들은 다양한 seed를 이용한 특정 알고리즘들로 만들어냄.
>Seed값
: 인스턴스 생성 시, 인자로 주는 부분이 Seed값이다.
: 같은 Seed값이 같은 줄 경우, 항상 같은 난수를 반환한다.
: Seed값을 주지 않을 경우, 항상 다른 난수를 반환한다. 그 이유는 생성자에 있음!
>생성자
public Random( ) {
	Random(long seed)
	this(System.currentTimeMillis( ));
}
: 위처럼 생성자에 this를 이용하여 다른 곳의 생성자를 끌어 오는 부분이 있다.
: 끌어오는 문장은 특정한 기준의 시간을 ms단위로 변환시킨 값을 반환한다.
: 때문에 인자를 주지 않는다면 Seed값은 항상 다르게 되어 매번 다른 난수가 생성된다.
>포함 메소드
: basicType nextBasicType( )
: 기본 자료형의 난수 값을 반환하는 메소드들이 포함됨.
: 매개변수는 난수의 범위를 지정하는 인자를 받음.
(예, .nextInt(100) 0이상 100미만 범위의 int형 난수 반환)

-문자열의 토큰 구분
>정의
토큰: 구분자에 의해 나눠진 문자열 덩어리
구분자: 토큰을 나누는 기준(특정 문자)
>예시
: "940715-653879"
구분자: -
토큰:  940715, 653879
>활용
: 구분자를 기준으로 토큰을 추출하는데 사용

-StringTokenizer 클래스
: 인스턴스 생성 시, 첫번째 인자로 문자열(구분자가 포함된)을 주고, 두번째 인자로 구분자를 주어 토큰을 구분한다.
: 구분자로 둘 이상이 올 수 있고, 공백도 구분자가 됨.
: 구분자를 쓸 땐 큰따옴표에 감싸 문자열 취급을 하고, 둘 이상의 구분자끼리는 공백이나 쉼표같은 표시로 구분하면 안됨.
: 구분자는 버려지는 값.
: 구분자는 무엇이든 될 수 있고, 필요한 토큰에 따라 구분자를 선택하면 된다.
>hasMoreTokens( )
: 반환할 토큰이 있는지 유무를 boolean값으로 반환함.
: 반환할 토큰의 존재 유무를 파악함으로써, 코드의 안정성을 높이는 역할
: 보통 반복문(while)에 사용하여 종료 기준으로 만듬.
>nextToken( )
: 토큰을 반환받음.
